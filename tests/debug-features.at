AT_BANNER([Debug features])

AT_SETUP([IPv6 multicast])
# skipping for some Linux distributions
AT_CHECK([skip_ipv6_multicast_tests.sh], [0], [ignore], [ignore])
AT_DATA([expout],
[[Arrived datagram is 'HELLO'
Sent datagram is 'WELCOME'
Sent datagram is 'HELLO'
Arrived datagram is 'WELCOME'
]])
AT_CHECK([pkill flom], [ignore], [ignore], [ignore])
AT_CHECK([flom --debug-feature=ipv6.multicast.server -A ff01::1 &], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=ipv6.multicast.client -A ff01::1], [0], [expout], [ignore])
AT_CLEANUP

AT_SETUP([TLS basic handshake])
AT_CHECK([time tls_setup.sh], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.server -a localhost --tls-certificate=CA1/peer1_CA1_cert.pem --tls-private-key=CA1/peer1_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem &], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.client -a localhost --tls-certificate=CA1/peer2_CA1_cert.pem --tls-private-key=CA1/peer2_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem], [0], [ignore], [ignore])
AT_CHECK([pkill flom], [ignore], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([TLS mutual authentication])
AT_CHECK([time tls_setup.sh], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.server -a localhost --tls-certificate=CA1/peer1_CA1_cert.pem --tls-private-key=CA1/peer1_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id &], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.client -a localhost --tls-certificate=CA1/peer2_CA1_cert.pem --tls-private-key=CA1/peer2_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id], [0], [ignore], [ignore])
AT_CHECK([pkill flom], [ignore], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([TLS peers with different cert. auth.])
AT_CHECK([time tls_setup.sh], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.server -a localhost --tls-certificate=CA1/peer1_CA1_cert.pem --tls-private-key=CA1/peer1_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id &], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.client -a localhost --tls-certificate=CA2/peer2_CA2_cert.pem --tls-private-key=CA2/peer2_CA2_key.pem --tls-ca-certificate=CA2/cacert.pem --tls-check-peer-id], [1], [ignore], [ignore])
AT_CHECK([pkill flom], [ignore], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([TLS wrong private key])
AT_CHECK([time tls_setup.sh], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.server -a localhost --tls-certificate=CA1/peer1_CA1_cert.pem --tls-private-key=CA1/peer1_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id &], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.client -a localhost --tls-certificate=CA1/peer2_CA1_cert.pem --tls-private-key=CA1/peer1_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id], [1], [ignore], [ignore])
AT_CHECK([pkill flom], [ignore], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([TLS wrong cert. auth.])
AT_CHECK([time tls_setup.sh], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.server -a localhost --tls-certificate=CA1/peer1_CA1_cert.pem --tls-private-key=CA1/peer1_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id &], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.client -a localhost --tls-certificate=CA1/peer2_CA1_cert.pem --tls-private-key=CA1/peer2_CA1_key.pem --tls-ca-certificate=CA2/cacert.pem --tls-check-peer-id], [1], [ignore], [ignore])
AT_CHECK([pkill flom], [ignore], [ignore], [ignore])
AT_CLEANUP

AT_SETUP([TLS wrong unique id])
AT_CHECK([time tls_setup.sh], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.server -a localhost --tls-certificate=CA1/peer3_CA1_cert.pem --tls-private-key=CA1/peer3_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id &], [0], [ignore], [ignore])
AT_CHECK([flom --debug-feature=tls.client -a localhost --tls-certificate=CA1/peer2_CA1_cert.pem --tls-private-key=CA1/peer2_CA1_key.pem --tls-ca-certificate=CA1/cacert.pem --tls-check-peer-id], [1], [ignore], [ignore])
AT_CHECK([pkill flom], [ignore], [ignore], [ignore])
AT_CLEANUP

