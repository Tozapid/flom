<?php
/*
 * Copyright (c) 2013-2015, Christian Ferrari <tiian@users.sourceforge.net>
 * All rights reserved.
 *
 * This file is part of FLoM.
 *
 * FLoM is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation.
 *
 * FLoM is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with FLoM.  If not, see <http://www.gnu.org/licenses/>.
 */

include("@abs_top_builddir@/src/php/flom.php");



/*
 * Happy path usage
 */
function happy_path() {
	 /*
	  * Non default values used for tests
	   */
	 $nd_socket_name = "/tmp/flom_socket_name";
	 $nd_trace_filename = "/tmp/flom.trc";
	 $nd_resource_name = "red.green.blue";
	 $nd_unicast_address = "127.0.0.1";
	 $nd_multicast_address = "224.0.0.1";
	 /* handle allocation */
	 $handle = new flom_handle_t();
	 $ret_cod = FLOM_RC_OK;
	 /* handle initialization */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_init($handle))) {
	 	fwrite(STDERR, "flom_handle_init() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* get current AF_UNIX/PF_LOCAL socket_name */
	 fwrite(STDOUT, "flom_handle_get_socket_name() = '" .
           flom_handle_get_socket_name($handle) . "'\n");
	 /* set a new AF_UNIX/PF_LOCAL socket_name */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_set_socket_name(
	    		$handle, $nd_socket_name))) {
		fwrite(STDERR, "flom_handle_set_socket_name() returned " .
		$ret_cod . ", '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* get new AF_UNIX/PF_LOCAL socket_name */
	 fwrite(STDOUT, "flom_handle_get_socket_name() = '" .
           flom_handle_get_socket_name($handle) . "'\n");
	 /* check socket name */
	 if ($nd_socket_name != flom_handle_get_socket_name($handle)) {
	        fwrite(STDERR, "Unexpected result from flom_handle_set/" .
		"get_socket_name\n");
		exit(1);
	 }
	 /* we don't get current trace filename because it can be altered by a
	    global config file */
	 /* set a new trace filename */
	 flom_handle_set_trace_filename($handle, $nd_trace_filename);
	 /* get new trace filename */
	 fwrite(STDOUT, "flom_handle_get_trace_filename() = '" .
           flom_handle_get_trace_filename($handle) . "'\n");
	 /* check trace filename */
	 if ($nd_trace_filename != flom_handle_get_trace_filename($handle)) {
	        fwrite(STDERR, "Unexpected result from flom_handle_set/" .
		"get_trace_filename\n");
		exit(1);
	 }
	 /* get current resource name */
	 fwrite(STDOUT, "flom_handle_get_resource_name() = '" .
           flom_handle_get_resource_name($handle) . "'\n");
	 /* set a new resource name */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_set_resource_name(
	    		$handle, $nd_resource_name))) {
		fwrite(STDERR, "flom_handle_set_resource_name() returned " .
		$ret_cod . ", '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* get new resource name */
	 fwrite(STDOUT, "flom_handle_get_resource_name() = '" .
           flom_handle_get_resource_name($handle) . "'\n");
	 /* get current value for resource create property */
	 fwrite(STDOUT, "flom_handle_get_resource_create() = '" .
           flom_handle_get_resource_create($handle) . "'\n");
	 /* set a new value for resource create property */
	 flom_handle_set_resource_create($handle, FALSE);
	 /* get new value for resource create property */
	 fwrite(STDOUT, "flom_handle_get_resource_create() = '" .
           flom_handle_get_resource_create($handle) . "'\n");
         /* check resource create 1/2 */
	 if (flom_handle_get_resource_create($handle)) {
	        fwrite(STDERR, "Unexpected result from flom_handle_set/" .
		"get_resource_create\n");
		exit(1);
	 }
	 /* set a new value for resource create property */
	 flom_handle_set_resource_create($handle, TRUE);
	 /* get new value for resource create property */
	 fwrite(STDOUT, "flom_handle_get_resource_create() = '" .
           flom_handle_get_resource_create($handle) . "'\n");
         /* check resource create 2/2 */
	 if (!flom_handle_get_resource_create($handle)) {
	        fwrite(STDERR, "Unexpected result from flom_handle_set/" .
		"get_resource_create\n");
		exit(1);
	 }
	 /* lock acquisition */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_lock($handle, NULL, 0))) {
	    	fwrite(STDERR, "happy_path/flom_handle_lock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
	 	exit(1);
	 }
	 /* lock release */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_unlock($handle))) {
	    	fwrite(STDERR, "happy_path/flom_handle_unlock() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle clean-up (memory release) */
	 if (FLOM_RC_OK != ($ret_cod = flom_handle_clean($handle))) {
	   	fwrite(STDERR, "happy_path/flom_handle_clean() returned " . 
		$ret_cod . " '" . flom_strerror($ret_cod) . "'\n");
		exit(1);
	 }
	 /* handle deallocation */
	 $handle = NULL;
}



happy_path();
?>
